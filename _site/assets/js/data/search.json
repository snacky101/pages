[
  
  {
    "title": "소프트웨어 장인 - 산드로 만쿠소",
    "url": "/posts/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%9E%A5%EC%9D%B8-%EC%82%B0%EB%93%9C%EB%A1%9C-%EB%A7%8C%EC%BF%A0%EC%86%8C/",
    "categories": "review",
    "tags": "review, books",
    "date": "2023-02-02 23:58:00 +0800",
    





    
    "snippet": "Main Topic개발자로서의:  경험담  조언Summary요즘 개발  개발자의:          실력은 연차와 무관      역할 변화                  과거: 단순한 코더(Coder)          현재: 프로페셔널 ← SW 장인정신이 필요한 이유                    애자일  주안점: 변화 → 빠른 피드백  분류    ...",
    "content": "Main Topic개발자로서의:  경험담  조언Summary요즘 개발  개발자의:          실력은 연차와 무관      역할 변화                  과거: 단순한 코더(Coder)          현재: 프로페셔널 ← SW 장인정신이 필요한 이유                    애자일  주안점: 변화 → 빠른 피드백  분류          절차적(올바른 방향)      기술적(올바른 실행)        특징          (개발자들의) 책임과 권한이 많아짐 + 필요역량의 수준도 높아짐        (애자일) 매니페스토          우리는 스스로 소프트웨어를 개발하고, 다른 사람들이 개발하는 것을 도와주면서 더 나은 소프트웨어 개발 방법들을 찾고 있다. 이 과정에서 우리는 다음과 같은 가치를 중요하게 생각한다.              절차와 도구보다는 개성과 화합을        방대한 문서 작업보다는 동작하는 소프트웨어를        계약 조건에 대한 협상보다는 고객과의 협력을        계획을 따르는 것을 넘어서서 변화에 대처하는 것을            더 가치있게 여긴다.좌측의 사항도 가치가 있음을 인정하지만 우리는 우측의 사항에 더 높은 가치를 둔다는 것이다.        (애자일) 원칙  목적          (고객, 회사, 동료와의) 신뢰와 협력 → 시너시를 높이는 것      SW 개발에 있어, 투자 대비 효율을 높이는 것      소프트웨어 장인정신  정의          개발자로서의 마음가짐 (책임감, 프로페셔널리즘, 실용주의, 개발자로서의 자부심)        비유          대장장이, 장인 → 중요한 것은 이러한 비유가 상징하고 장려하는 것        (소프트웨어 장인정신) 매니페스토          소프트웨어 장인을 열망하는 우리는, 스스로의 기술을 연마하고, 다른 사람들이 기술을 배울 수 있도록 도움으로써 프로페셔널 소프트웨어 개발의 수준을 높인다. 이러한 일을 하는 과정에서 우리는 다음과 같은 가치들을 추구한다.              동작하는 소프트웨어 뿐만 아니라, 정교하고 솜씨 있게 만들어진 작품을,        변화에 대응하는 것뿐만 아니라, 계속해서 가치를 더하는 것을,        개별적으로 협력하는 것뿐만 아니라, 프로페셔널 커뮤니티를 조성하는 것을,        고객과 협업하는 것뿐만 아니라, 생산적인 동반자 관계를,            이 앞의 항목들(일반 굵기)을 추구하는 과정에서, 다음 항목들(볼드체)이 꼭 필요함을 의미한다.              핵심 주제(부제에 드러남): “프로페셔널 소프트웨어의 개발의 수준을 높인다”      비판점                  애자일 매니페스토와 달리 너무 당연한 내용          중요한 것은 (이런 당연한 매니페스토의) 실천                    소프트웨어 장인의 태도  커리어의 주인은 누구인가?커리어를 회사나 누군가에게 맡겨놓듯이 흘러가면 안되고, 최대의 효율로 고객을 만족시키는 방향으로 스스로 발전해 나갈 수 있어야 함태도로 가져야 할 요소  자기계발          독서, 블로그, SNS 등을 통한 읽기: 각기 장단이 있음.        커뮤니티          커뮤니티에는 열정적인 사람이 많으므로, 배울점이 있음        호기심          호기심은 개발자의 덕목      스스로의 무지를 알고, 호기심을 가지고 모르는 것을 알아나가는 자세        워라밸          시간이 없다는 것은 변명, 시간을 잘 배분하자      프로페셔널리즘  무엇이 프로페셔널한 것인가.  영웅이란 없다.  솔직해야 한다.          ‘아니오’ 라고 말할 수 있어야 한다. 그러나 대안도 함께 제시할 줄 알아야 한다.      투명하게 상황을 고객이나, 팀메이트와 공유해야 한다.      불가능한 것에 대해서 ‘아니오’ 라고 말하지 않고, 프로젝트의 상황에 대해 고객에게 공유하지 않으며, 미련하게 야근하며 영웅이 되어보겠다고 하는 것은 결코 프로페셔널한 자세가 아니다.옳지 못한 의사결정에 대해 ‘아니오’ 라고 말하며, 프로젝트의 상황을 투명하게 고객에게 전달하고, 고객이 진정 원하는 것을 달성할 수 있도록 조언하고 돕는 것이야말로, 진정 프로페셔널한 자세다.동작하는 소프트웨어  동작하기’만’ 하는 소프트웨어로는 부족  소프트웨어 개발은 정원돌보기와 같다  ‘시간’ 이란 단순히 개개인의 시간이 아니라, 소프트웨어 전체에 들어가는 ‘시간’을 생각해야한다.          테스트 코드를 작성하는 것도 ‘전체 시간’을 아끼기 위해서라는 방향으로 접근하는 것이다.      기술적 실행 관례  올바른 일과, 올바른 실행          애자일이 올바른 일에 대해 피드백을 준다면, 기술적 실행 관례는 올바른 실행을 하고 있는지 피드백을 준다.        상황논리는 핑계  중요한 것은 빠른 ‘피드백’          TDD      TDD + 지속적 통합: 개발자가 코드를 올릴 때마다 테스트를 수행하여, 항상 시스템을 배포 가능한 상태로 유지      페어프로그래밍: 실시간 코드리뷰        리팩토링          실용주의적인 관념 없이 리팩토링 하는 것은 대단히 위험하다. 프로페셔널로 행동한다는 것은 트레이드오프를 이해한다는 것이다.              리팩토링의 대상                  더 자주 변경되는 부분          해당 부분을 이해하여 변경할 필요가 있는 부분                    책임감  중요한 것은 실행 관례 자체가 아니라, 비지니스적 가치 에 있다.  실행관례를 따를 경우의 비지니스적 가치를 이해  실행관례를 따르지 않아야 하는 상황에서는, 그것이 어떤 비지니스적 가치가 있는지 이해하고, 더 나은 선택을 할 수 있도록 책임감 을 가져야 한다.실용주의  현재 훌륭한 실행 관례도, 나중에는 더 좋은 것으로 대체될 수 있다.  중요한 것은 지속적으로 일하는 더 나은 방법을 찾고, 고객을 만족시켜야 한다는 것이다.  TDD 가 되었든, 무엇이든 절대적인 진리로 바라보지 말고, 끊임없이 질문하고 더 나은 방향을 찾아야한다.          실행관례 도입을 위한 도입을 해서는 안된다.      커리어와 동기  어디로 가고 있는지 모르면, 결국 가고 싶지 않은 곳으로 간다 - 요기 베라 Yogi Berra결단과 집중  커리어를 하나의 큰 장기 프로젝트로 보고, 이를 향해 나아가야 한다.  그러나 나아가야 할 목표를 알 수 없다면, 다양한 방법으로 내게 열린 길을 확장해 두는 것도 좋은 방법이다.          예를 들어, 컨퍼런스 연사로 참여, 개인 블로그, 기술 습득 등      투자로서의 일터  직장을 선택할 때, 내 커리어적인 측면의 투자로 생각해야 한다.  이기적으로 하라거나, 고객의 관점은 무시하고 이력서를 채우라는 말로 오해해서는 안된다.개발자의 원동력  자율성, 통달, 목적의식회사 안에서의 커리어  방향성의 일치          소프트웨어 장인은 자신의 커리어 방향과 일치하는 경우에만, 회사 안의 커리어를 수용한다.        여정의 중요성          소프트웨어 장인은 그들의 커리어가 긴 여정이며, 어떤 종착지에 도달하는 것보다 그 여정 자체가 중요함을 이해한다.      채용채용의 방법  공고  커뮤니티  추천 채용채용시 중요한 것  단순히 경험한 기술의 나열이 아닌, 열정  공고도 이러한 점을 고려선별  열정을 중요하게 봐야 하지만, 이로는 선별 조건에 적합하지 않을 수 있기 때문에 아래와 같은 것들을 고려한다.          Github 계정      블로그      오픈 소스 활동      기술 커뮤니티나 사용자 그룹 활동 내역      펫 프로젝트 내용      트위터 계정      좋아하는 기술서적 목록      참석했거나 발표했던 컨퍼런스      면접  면접은 쌍방의 이해 관계를 맞춰보는 과정  기술도 중요하지만, 개발자로서의 자질이 더 중요방식  자유토론과 같아야한다. (준비할 수 있는 종류의 것이 아니기 때문)  면접시 정말 필요한 능력에 대해 물어볼 것          설계능력이든, 가치있게 여기는 점이든, 중요하게 생각하는 것을 물어보고, 이외에 불필요한 것들은 질문할 필요가 없다.        마인드맵 방식 질의  페어 프로그래밍(압박 X, 실력발휘할 수 있도록 도와줘야 한다.)  개인 컴퓨터를 지참한 면접  면접 전에, 스스로에게 “소중하게 생각하는 가치”, “동료들로부터 기대하는 태도”, “직무의 핵심 스킬” 등을 질문해보자. 이것이 채용의 기본 요건이 된다.  새로운 프로젝트를 위한 인원을 뽑을 경우          과거 프로젝트를 성공적으로 이끈 경험      노련함(특정 분야의 스페셜리스트보다 폭넓게 조예있는 기술분석 전문가도 필요하다.)        지원자와 회사 모두 면접을 어떻게 하는지 모두가 알아야 한다.  개발자 채용은 개발자가 해야한다.내 요약  팀에 “필요한 역량”을 가진 “열정” 있는 개발자를, “함께 일할 개발자들”이 뽑는 것면접관이 피해야 할 것  똑똑한 척 하는 것  면접자를 배려하지 않는 것          항상 면접자를 프로페셔널로 생각하고, 존중해야 한다.        의미 없는 코딩          인터넷 연결 끊기      종이 손코딩      알고리즘 테스트        전화 면접낮은 사기현상  애자일 행오버 라고 불리는 문제  목적없이 출근”만” 하는 개발자  원인          동기와 목적의식의 부재      사례 소개  동기부여에 실패해, 고객이 손실을 얻게 된 사례  동기부여에 성공해, 프로젝트를 다시 성공적으로 이끈 사례극복(개발자들에게 열정 불어넣기)  소프트웨어 장인을 동료로 채용 -&gt; 최고의 동료가, 개발자들에게 열정을 불어넣는 최선의 방법이다."
  }
  
]

